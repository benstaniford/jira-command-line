name: Release

on:
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Use Unix-specific requirements file for CI (no windows-curses)
        pip install -r requirements-unix.txt
        pip install -r requirements-test.txt

    - name: Run full test suite
      run: |
        python -m pytest tests/ -v --cov=libs --cov-report=xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          coverage.xml
          .coverage
        retention-days: 30

  validate-installation:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Use Unix-specific requirements file for CI (no windows-curses)
        pip install -r requirements-unix.txt

    - name: Test basic functionality
      run: |
        # Test that the main script can be imported without errors
        python -c "import sys; sys.path.append('.'); import libs.MyJiraConfig; print('Import successful')"
        
        # Test that command registry loads without errors  
        python -c "import sys; sys.path.append('.'); from libs.CommandRegistry import CommandRegistry; registry = CommandRegistry(); print('Command registry loaded successfully')"

  security-audit:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install audit tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety pip-audit

    - name: Run security audit
      run: |
        bandit -r libs/ -ll
        safety check
        pip-audit