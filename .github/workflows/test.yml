name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-unix.txt', 'requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Use Unix-specific requirements file for CI (no windows-curses)
        pip install -r requirements-unix.txt
        pip install -r requirements-test.txt

    - name: Lint with flake8 (if available)
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true

    - name: Run tests with pytest
      run: |
        python -m pytest tests/ -v --tb=short

    - name: Run tests with coverage
      run: |
        python -m pytest tests/ --cov=libs --cov-report=xml --cov-report=term-missing

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install security scanning tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run Bandit security check
      run: |
        bandit -r libs/ -f json -o bandit-report.json || true
        bandit -r libs/ || true
      continue-on-error: true

    - name: Run Safety check for known vulnerabilities
      run: |
        safety check --json --output safety-report.json || true
        safety check || true
      continue-on-error: true

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install code quality tools
      run: |
        python -m pip install --upgrade pip
        pip install black isort mypy

    - name: Check code formatting with Black
      run: |
        black --check --diff libs/ tests/ || true
      continue-on-error: true

    - name: Check import sorting with isort  
      run: |
        isort --check-only --diff libs/ tests/ || true
      continue-on-error: true

    - name: Type checking with mypy
      run: |
        mypy libs/ --ignore-missing-imports || true
      continue-on-error: true