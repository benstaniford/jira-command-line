#!/usr/bin/python
#scriptdoc: title="Gather stats about the last two weeks", tags="bt,work,jira"
import json
import argparse
import sys
import time
from MyJira import MyJira
from MyGit import MyGit
from MyGithub import MyGithub
from MyJiraConfig import MyJiraConfig

# Load the config
config_file = MyJiraConfig()
if not config_file.exists():
    print("Configuration file not found, generating template...")
    print("Please edit the configuration file and generate required PAT tokens for jira and github")
    config_file.generate_template()
    print(f"Configuration file saved to: {config_file.get_location()}")
    input("Press any key to exit...")
    quit()
config = config_file.load()

# Global variables
jira = MyJira(config.get('jira'))
mygit = MyGit(config.get('git'))
mygithub = MyGithub(config.get('github')) if config.get('github')['token'] != "" else None
parser = argparse.ArgumentParser()
parser.add_argument("-c", "--csv", help="Output in CSV format")
args = parser.parse_args()
csvFile = args.csv
time_now = time.strftime("%d/%m/%Y %H:%M:%S")

def subtask_being_worked_on(subtask):
    in_progress_states = ["In Progress", "Development", "Testing"]
    if subtask.fields.status.name in in_progress_states:
        return True
    return False

def print_csv(line):
    if csvFile:
        with open(csvFile, 'a') as f:
            f.write(line + '\n')

def main():
    print_csv("Time,Assignee,Task,Task Summary,Task State,Issue,Issue Summary,Issue State")

    working_list = []

    # Print each item on the sprint
    sprint = jira.get_sprint_issues()
    for issue in sprint:
        subtasks = issue.fields.subtasks
        for subtask in subtasks:
            subtask_issue = jira.get_issue_by_key(subtask.key)
            assignee = jira.get_assignee(subtask_issue) if subtask_issue.fields.assignee is not None else "Noone"
            if subtask_being_worked_on(subtask_issue):
                print (f"{assignee} is working on {subtask.key}, state:{subtask_issue.fields.status.name} - {subtask_issue.fields.summary}")
                print (f"  {issue.key} - {issue.fields.summary}\n")
                print_csv(f"{assignee},{time_now},{subtask.key},{subtask.fields.summary},{subtask_issue.fields.status.name},{issue.key},{issue.fields.summary},{issue.fields.status.name}")

if __name__ == "__main__":
    main()

